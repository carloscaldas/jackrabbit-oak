docker network create somenetwork
docker run -d --name elasticsearch --net somenetwork -p 9200:9200 -p 9300:9300 -e discovery.type=single-node elasticsearch:7.4.0
docker run -d --name kibana --net somenetwork -p 5601:5601 docker.elastic.co/kibana/kibana:7.4.0

index for customer:
PUT /customers/_doc/1
{
 "firstName": "John",
 "lastName": "Smith",
 "contact": {
 "mobile": "212-xxx-yyyy"
 },
 ...
}

index for products:
PUT /products/_doc/1
{
 "title": "Apple iPhone Xs (Gold, 4GB RAM, 64GB Storage, 12 MP Dual Camera, 458 PPI Display)",
 "price": 999.99,
 ...
}


Documents:

_id: This is the unique identifier of the document within the type, just like a primary key in a database table. It can be autogenerated or specified by the user.
_type: This field contains the type of the document. 
_index: This field contains the index name of the document.

 Node
 A node can also be assigned a static name via the node.name parameter in the Elasticsearch configuration file, config/elasticsearch.yml.


 A cluster hosts one or more indexes and is responsible for providing operations such as searching, indexing, and aggregations. A cluster is formed by one or more nodes. Every Elasticsearch node is always part of a cluster, even if it is just a single node cluster. By default, every Elasticsearch node tries to join a cluster with the name Elasticsearch. If you start multiple nodes on the same network without modifying the cluster.name property in config/elasticsearch.yml, they form a cluster automatically.

