A1) Start mongo
docker run --name mongodb3 -p 27017:27017 mongo:3

1.1 - docker exec -it mongodb3 bash
1.2 - mongo

Colocar senha (nao e o caso)
docker run -d --name mongodb \
    -p 27017:27017 \
    -e MONGO_INITDB_ROOT_USERNAME=MongoMKDB \
    -e MONGO_INITDB_ROOT_PASSWORD=MongoMKDB2 \
    mongo:4.2.2
--------------------------
A2: Start Sql server
docker run -e "ACCEPT_EULA=Y" -e "MSSQL_SA_PASSWORD=Root123@" -p 1401:1433 --name mssql -d microsoft/mssql-server-linux:2017-latest
docker exec -it mssql /opt/mssql-tools/bin/sqlcmd -U sa -P "Root123@"


2) Iniciar o standalone server
$ cd oak-examples/standalone
$ mvn clean install 

java -jar target/oak-standalone-*.jar
java -jar target/oak-standalone-*.jar Oak-RDB --rdbjdbcuri "jdbc:sqlserver://localhost:1401;databasename=newdb;user=sa;password=Root123@" --rdbjdbcuser "sa" --rdbjdbcpasswd "Root123@" --db "neb"

3) Criar data
curl --request MKCOL --data @- --user admin:admin \
       http://localhost:8080/server/default/jcr:root/hello/ <<END
<sv:node sv:name="hello" xmlns:sv="http://www.jcp.org/jcr/sv/1.0">
  <sv:property sv:name="message" sv:type="String">
    <sv:value>Hello, World!</sv:value>
  </sv:property>
  <sv:property sv:name="date" sv:type="Date">
    <sv:value>2009-11-17T12:00:00.000Z</sv:value>
  </sv:property>
</sv:node>
END

http -a admin:admin -j -b localhost:8080/test foo=xyz child:='{"jcr:primaryType": "oak:Unstructured"}'

curl -F"jcr:primaryType=nt:unstructured" -Ftitle="some title text" \
    -Ftext="some body text content" http://localhost:8080/some/content

http -a admin:admin -j -b localhost:4502/test jcr\\:primaryType=oak:Unstructured foo=abc bar:=123
http -a admin:admin -j -b localhost:4502/test primaryType=root foo=abc bar:=123

create:
http -a admin:admin -j -b localhost:8080/test foo=xyzt
{
  "foo": "xyzt"
}

Consulta:
http -a admin:admin -j -b localhost:4502

Criar:
http -j -b localhost:8080/test jcr\\:primaryType=oak:Unstructured foo=abc bar:=123


4) update:
curl --request PUT --header "Content-Type: jcr-value/string" \
       --data "Document date updated6"  --user admin:admin \
       http://localhost:8080/server/default/jcr:root/hello/history

3) Fetch data
curl --user admin:admin http://localhost:8080/server/default/jcr:root/hello.json

4)
    java -jar oak-upgrade-*.jar \
        path/to/the/jr2/repository \
        path/to/repository.xml \
        path/to/the/new/repository

    java -jar oak-upgrade-*.jar \
        path/to/the/jr2/repository \
        mongodb://localhost:27017/oak
-----
=====================
5) Trying with ms sql server
5.1 - Download driver
https://repo1.maven.org/maven2/com/microsoft/sqlserver/mssql-jdbc/7.4.1.jre12/mssql-jdbc-7.4.1.jre12.jar

5.2 

5.1 - Run
java -jar target/oak-run-1.21-SNAPSHOT.jar server http://localhost:4502 Oak-RDB --rdbjdbcuri "jdbc:sqlserver://localhost:1401;databaseName=newdb;user=sa;password=Root123@" --rdbjdbcuser "sa" --rdbjdbcpasswd "Root123@" --db "newdb"


java -Dlogback.configurationFile=./logback.xml -jar oak-run-*.jar console /tmp/repo

java -Dlogback.configurationFile=./logback.xml -jar oak-run-*.jar console /tmp/repo

===============

  --rdbjdbc



curl -u admin:admin -F"sling:resourceType=foo/bar" -F"title=some title" http://localhost:8080/content/mynode
